"use client";
import { useEffect } from "react";
import Head from "next/head";

// Material UI
import { ThemeProvider } from "@mui/material/styles";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v15-appRouter";

// Redux
import { store, persistor } from "../store/store";
import { PersistGate } from "redux-persist/integration/react";
import { Provider } from "react-redux";

// Components
import Navbar from "./_Components/Navbar/navbar";
import Footer from "./_Components/Footer/footer";

// Styling
import "./globals.css";
import theme from "../theme";

// Hooks
import { useServiceWorker } from "@/hooks/useServiceWorker";

// Others
import { Geist, Geist_Mono } from "next/font/google";
import { Toaster } from "react-hot-toast";
import { SpeedInsights } from "@vercel/speed-insights/next"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  useServiceWorker();

  useEffect(() => {
    if ("serviceWorker" in navigator) {
      navigator.serviceWorker.register("/sw.js").catch(console.error);
    }
  }, []);

  useEffect(() => {
    document.title = "Webly";
  }, []);
  return (
    <html lang="en">
       <Head>
        <meta name="description" content="Generated by Next.js" />
        <link rel="icon" href="/favicon.ico" type="image/x-icon" />
        </Head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <Provider store={store}>
              <PersistGate loading={null} persistor={persistor}>
                <Navbar />
                {children}
                <Footer />
                <Toaster />
                <SpeedInsights/>
              </PersistGate>
            </Provider>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
